"use strict";(self.webpackChunkopenim_docs=self.webpackChunkopenim_docs||[]).push([[16329],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),m=o,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return t?r.createElement(g,a(a({ref:n},p),{},{components:t})):r.createElement(g,a({ref:n},p))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[u]="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},99277:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>g,frontMatter:()=>s,metadata:()=>c,toc:()=>u});t(67294);var r=t(3905);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const s={title:"Electron",hide_title:!0,sidebar_position:6},l=void 0,c={unversionedId:"quickstart/electron",id:"quickstart/electron",title:"Electron",description:"\ud83d\ude80 Using Demo",source:"@site/i18n/en/docusaurus-plugin-content-docs-sdks/current/quickstart/electron.mdx",sourceDirName:"quickstart",slug:"/quickstart/electron",permalink:"/sdks/quickstart/electron",draft:!1,editUrl:"https://github.com/OpenIMSDK/docs/tree/main/docs/sdks/quickstart/electron.mdx",tags:[],version:"current",lastUpdatedAt:1746609795,formattedLastUpdatedAt:"May 7, 2025",sidebarPosition:6,frontMatter:{title:"Electron",hide_title:!0,sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Browser",permalink:"/sdks/quickstart/browser"},next:{title:"uni-app",permalink:"/sdks/quickstart/uniapp"}},p={},u=[{value:"\ud83d\ude80 Using Demo",id:"-using-demo",level:2},{value:"Quick Integration",id:"quick-integration",level:2},{value:"1. Add Dependencies",id:"1-add-dependencies",level:3},{value:"2. Obtain Static Resources Required by wasm",id:"2-obtain-static-resources-required-by-wasm",level:3},{value:"3. Import SDK",id:"3-import-sdk",level:3},{value:"4. Login and Set Listeners",id:"4-login-and-set-listeners",level:3},{value:"5. Sending and Receiving Messages",id:"5-sending-and-receiving-messages",level:3}],d={toc:u},m="wrapper";function g(e){var{components:n}=e,t=a(e,["components"]);return(0,r.kt)(m,i(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){o(e,n,t[n])}))}return e}({},d,t),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"-using-demo"},"\ud83d\ude80 Using Demo"),(0,r.kt)("p",null,"We strongly recommend that you first run the framework-related sample ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/openimsdk/openim-electron-demo"},"DEMO")," we have prepared for you. This will not only allow you to intuitively experience the functionalities of the OpenIMSDK, but it will also help you quickly identify and resolve issues during the actual integration process."),(0,r.kt)("h2",{id:"quick-integration"},"Quick Integration"),(0,r.kt)("h3",{id:"1-add-dependencies"},"1. Add Dependencies"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"npm install @openim/wasm-client-sdk @openim/electron-client-sdk --save\n")),(0,r.kt)("h3",{id:"2-obtain-static-resources-required-by-wasm"},"2. Obtain Static Resources Required by wasm"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"In the ",(0,r.kt)("inlineCode",{parentName:"p"},"node_modules")," directory at the root of your project, find the ",(0,r.kt)("inlineCode",{parentName:"p"},"@openim/wasm-client-sdk")," subdirectory, and copy all files from the ",(0,r.kt)("inlineCode",{parentName:"p"},"assets")," folder to your project's public resource directory (public).")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"File List")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"openIM.wasm\nsql-wasm.wasm\nwasm_exec.js\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"After copying, include the ",(0,r.kt)("inlineCode",{parentName:"p"},"wasm_exec.js")," file in your ",(0,r.kt)("inlineCode",{parentName:"p"},"index.html")," file via a script tag")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Potential Issues"),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"If you are using webpack4, you might need to refer to this issue for configuration ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/openimsdk/open-im-sdk-web-wasm/issues/73"},"How to import @openim/wasm-client-sdk in webpack4.x"))))),(0,r.kt)("h3",{id:"3-import-sdk"},"3. Import SDK"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Main Process")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import OpenIMSDKMain from '@openim/electron-client-sdk';\n\n...\nnew OpenIMSDKMain(libPath, mainWindow.webContents);\n...\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Preload Script")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import '@openim/electron-client-sdk/lib/preload';\n\n...\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Renderer Process")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { getWithRenderProcess } from '@openim/electron-client-sdk/lib/render';\n\nconst { instance } = getWithRenderProcess();\n\nexport const IMSDK = instance;\n")),(0,r.kt)("h3",{id:"4-login-and-set-listeners"},"4. Login and Set Listeners"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Note: The initialization of the SDK differs between the electron and web environments. If you need to support both, pay attention to handling them separately.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { CbEvents, LogLevel } from '@openim/wasm-client-sdk';\nimport type { WSEvent } from '@openim/wasm-client-sdk/lib/types/entity';\n\nIMSDK.on(CbEvents.OnConnecting, handleConnecting);\nIMSDK.on(CbEvents.OnConnectFailed, handleConnectFailed);\nIMSDK.on(CbEvents.OnConnectSuccess, handleConnectSuccess);\n\n// Electron\nawait IMSDK.initSDK({\n  platformID: 'your-platform-id',\n  apiAddr: 'http://your-server-ip:10002',\n  wsAddr: 'ws://your-server-ip:10001',\n  dataDir: 'your-db-dir',\n  logFilePath: 'your-log-file-path',\n  logLevel: LogLevel.Debug,\n  isLogStandardOutput: true,\n});\n\nawait IMSDK.login({\n  userID: 'your-user-id',\n  token: 'your-token',\n});\n\n// Web\nawait IMSDK.login({\n  userID: 'your-user-id',\n  token: 'your-token',\n  platformID: 5,\n  apiAddr: 'http://your-server-ip:10002',\n  wsAddr: 'ws://your-server-ip:10001',\n  logLevel: LogLevel.Debug,\n});\n\nfunction handleConnecting() {\n  // Connecting...\n}\n\nfunction handleConnectFailed({ errCode, errMsg }: WSEvent) {\n  // Connection failed \u274c\n  console.log(errCode, errMsg);\n}\n\nfunction handleConnectSuccess() {\n  // Connection successful \u2705\n}\n")),(0,r.kt)("h3",{id:"5-sending-and-receiving-messages"},"5. Sending and Receiving Messages"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { CbEvents } from '@openim/wasm-client-sdk';\nimport type { WSEvent, MessageItem } from '@openim/wasm-client-sdk/lib/types/entity';\n\n// Listen for new messages \ud83d\udce9\nIMSDK.on(CbEvents.OnRecvNewMessages, handleNewMessages);\n\nconst message = (await IMSDK.createTextMessage('hello openim')).data;\n\nIMSDK.sendMessage({\n  recvID: 'recv user id',\n  groupID: '',\n  message,\n})\n  .then(() => {\n    // Message sent successfully \u2709\ufe0f\n  })\n  .catch(err => {\n    // Failed to send message \u274c\n    console.log(err);\n  });\n\nfunction handleNewMessages({ data }: WSEvent<MessageItem[]>) {\n  // New message list \ud83d\udce8\n  console.log(data);\n}\n")))}g.isMDXComponent=!0}}]);