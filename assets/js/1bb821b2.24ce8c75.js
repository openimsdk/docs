"use strict";(self.webpackChunkopenim_docs=self.webpackChunkopenim_docs||[]).push([[87727],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),m=s(n),u=a,k=m["".concat(l,".").concat(u)]||m[u]||c[u]||i;return n?r.createElement(k,o(o({ref:t},d),{},{components:n})):r.createElement(k,o({ref:t},d))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[m]="string"==typeof e?e:a,o[1]=p;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},62343:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>k,frontMatter:()=>p,metadata:()=>s,toc:()=>m});n(67294);var r=n(3905);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}const p={title:"Cluster Deployment Instructions",sidebar_position:6},l=void 0,s={unversionedId:"gettingStarted/cluster",id:"gettingStarted/cluster",title:"Cluster Deployment Instructions",description:"Cluster Deployment Instructions",source:"@site/i18n/en/docusaurus-plugin-content-docs-guides/current/gettingStarted/cluster.mdx",sourceDirName:"gettingStarted",slug:"/gettingStarted/cluster",permalink:"/guides/gettingStarted/cluster",draft:!1,editUrl:"https://github.com/OpenIMSDK/docs/tree/main/docs/guides/gettingStarted/cluster.mdx",tags:[],version:"current",lastUpdatedAt:1746609795,formattedLastUpdatedAt:"May 7, 2025",sidebarPosition:6,frontMatter:{title:"Cluster Deployment Instructions",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Monitoring and Alert System",permalink:"/guides/gettingStarted/admin"},next:{title:"Environment and Components",permalink:"/guides/gettingStarted/env-comp"}},d={},m=[{value:"Cluster Deployment Instructions",id:"cluster-deployment-instructions",level:2},{value:"<strong>Frequently Asked Questions / Notes</strong>",id:"frequently-asked-questions--notes",level:2}],c={toc:m},u="wrapper";function k(e){var{components:t}=e,p=o(e,["components"]);return(0,r.kt)(u,i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){a(e,t,n[t])}))}return e}({},c,p),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"cluster-deployment-instructions"},"Cluster Deployment Instructions"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"open-im-server")," supports cluster deployment. Below are the steps for ",(0,r.kt)("strong",{parentName:"p"},"source cluster")," deployment:"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Scenario"),": Deploy ",(0,r.kt)("inlineCode",{parentName:"p"},"open-im-server")," on two machines, Machine A and Machine B, assuming both machines are in the same internal network."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Machine A"),": Deploy ",(0,r.kt)("inlineCode",{parentName:"p"},"open-im-server"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"nginx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"mongo"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"redis"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"etcd"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"kafka"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"minio"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"prometheus"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"grafana"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"alertmanager"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Machine B"),": Deploy ",(0,r.kt)("inlineCode",{parentName:"p"},"open-im-server"),"."),(0,r.kt)("p",null,"The components ",(0,r.kt)("inlineCode",{parentName:"p"},"mongo"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"redis"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"kafka"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"etcd")," all support cluster deployment. In the following scenario, each component cluster is deployed on 3 nodes by default."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"On Machine A and B"),": Clone the repository:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/openimsdk/open-im-server && cd open-im-server\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"On Machine A"),": Modify the addresses in ",(0,r.kt)("inlineCode",{parentName:"p"},"kafka"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"minio"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"mongodb"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"etcd")," (default service discovery method), and ",(0,r.kt)("inlineCode",{parentName:"p"},"redis"),", configuring them to the correct component addresses. ",(0,r.kt)("strong",{parentName:"p"},"Ensure that the ports of the connected components are accessible (check if firewall rules allow port access).")," Modify the addresses of the corresponding components in the ",(0,r.kt)("inlineCode",{parentName:"p"},"open-im-server/config")," directory."),(0,r.kt)("p",{parentName:"li"},"Corresponding configuration file fields:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"kafka"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"kafka.yml:address"),", containing ",(0,r.kt)("inlineCode",{parentName:"li"},"[ kafkaAddr1, kafkaAddr2, kafkaAddr3 ]")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"minio"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"minio.yml"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"internalAddress")," configures the internal service access address, ",(0,r.kt)("inlineCode",{parentName:"li"},"externalAddress")," configures the external access address for ",(0,r.kt)("inlineCode",{parentName:"li"},"minio"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"mongo"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"mongodb.yml:address"),", containing ",(0,r.kt)("inlineCode",{parentName:"li"},"[ mongoAddr1, mongoAddr2, mongoAddr3 ]")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"etcd"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"discovery.yml:etcd.address"),", containing ",(0,r.kt)("inlineCode",{parentName:"li"},"[ etcdAddr1, etcdAddr2, etcdAddr3 ]")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"redis"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"redis.yml:address"),", containing ",(0,r.kt)("inlineCode",{parentName:"li"},"[ redis1, redis2, redis3 ]"),", and set ",(0,r.kt)("inlineCode",{parentName:"li"},"clusterMode")," in ",(0,r.kt)("inlineCode",{parentName:"li"},"redis.yml")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"true")," (not needed for single-node deployment)."))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Modify the number of each component as needed in ",(0,r.kt)("inlineCode",{parentName:"p"},"open-im-server/start-config.yml"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Deploy ",(0,r.kt)("inlineCode",{parentName:"strong"},"nginx")," on Machine A"),", with the following reference configuration:"),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},"\ud83d\ude80 ",(0,r.kt)("strong",{parentName:"p"},"Tip"),": Ensure to replace with your actual domain name, SSL certificate path, and SSL key.")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'events {\n    worker_connections 1024;\n}\n\nhttp {\n    #open-im-server chat Corresponding deployment address and port\n    upstream msg_gateway{\n        #IM Message server address Multiple can be specified according to the deployment\n        server 127.0.0.1:10001;\n        server 192.168.2.36:10001;\n    }\n    upstream im_api{\n        #IM Group user api server address Multiple can be specified according to the deployment\n        server 127.0.0.1:10002;\n        server 192.168.2.36:10001;\n    }\n    upstream minio_s3_2{\n        #Minio address can be assigned to multiple modules depending on deployment\n        server 127.0.0.1:10005;\n    }\n    server {\n        listen       443; #Listening on port 443\n        server_name  web.xx.xx;  #Your domain name\n        ssl on;\n        #Path of pem file for ssl certificate\n        ssl_certificate /usr/local/nginx/conf/ssh/web.xx.xx_bundle.pem;\n        #Key file path of ssl certificate\n        ssl_certificate_key /usr/local/nginx/conf/ssh/web.xx.xx.key;\n\n        gzip on;\n        gzip_min_length 1k;\n        gzip_buffers 4 16k;\n        gzip_comp_level 2;\n        gzip_types text/plain application/javascript application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png application/wasm;\n        gzip_vary off;\n        gzip_disable "MSIE [1-6]\\.";\n\n        location ^~/api/{\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection "Upgrade";\n            proxy_set_header X-real-ip $remote_addr;\n            proxy_set_header X-Forwarded-For $remote_addr;\n            proxy_set_header X-Request-Api $scheme://$host/api;\n            proxy_pass http://im_api/;\n        }\n\n        location /msg_gateway{\n            proxy_http_version 1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header Connection "Upgrade";\n            proxy_set_header X-real-ip $remote_addr;\n            proxy_set_header X-Forwarded-For $remote_addr;\n            proxy_pass http://msg_gateway/;\n        }\n\n        location ^~/im-minio-api/ {\n            proxy_set_header Host $http_host;\n            proxy_set_header X-Real-IP $remote_addr;\n            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n            proxy_set_header X-Forwarded-Proto $scheme;\n            proxy_connect_timeout 300;\n\n            proxy_http_version 1.1;\n            proxy_set_header Connection "";\n            chunked_transfer_encoding off;\n            proxy_pass http://minio_s3_2/;\n        }\n    }\n}\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Compile with ",(0,r.kt)("inlineCode",{parentName:"p"},"mage"),", start the service with ",(0,r.kt)("inlineCode",{parentName:"p"},"mage start"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"When initializing the ",(0,r.kt)("inlineCode",{parentName:"p"},"sdk"),", configure the ",(0,r.kt)("inlineCode",{parentName:"p"},"api")," connection address as ",(0,r.kt)("inlineCode",{parentName:"p"},"http://web.xx.xx/api"),", the ",(0,r.kt)("inlineCode",{parentName:"p"},"ws")," connection address as ",(0,r.kt)("inlineCode",{parentName:"p"},"http://web.xx.xx/msg_gateway"),", and the ",(0,r.kt)("inlineCode",{parentName:"p"},"minio")," address as ",(0,r.kt)("inlineCode",{parentName:"p"},"http://web.xx.xx/im-minio-api"),"."))),(0,r.kt)("h2",{id:"frequently-asked-questions--notes"},(0,r.kt)("strong",{parentName:"h2"},"Frequently Asked Questions / Notes")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"When deploying ",(0,r.kt)("inlineCode",{parentName:"p"},"kafka"),", you need to modify the broadcast port of ",(0,r.kt)("inlineCode",{parentName:"p"},"kafka"),". If using ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"open-im-server"),", modify ",(0,r.kt)("inlineCode",{parentName:"p"},"service.kafka.environment.KAFKA_CFG_ADVERTISED_LISTENERS"),"'s ",(0,r.kt)("inlineCode",{parentName:"p"},"EXTERNAL")," to the address to access the ",(0,r.kt)("inlineCode",{parentName:"p"},"kafka")," component. For other deployment methods, please modify accordingly.\nFor example: ",(0,r.kt)("inlineCode",{parentName:"p"},"KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://192.168.2.36:19094"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Deploying on multiple machines requires ensuring clock synchronization for services to run properly. For example, the issuance of ",(0,r.kt)("inlineCode",{parentName:"p"},"token")," allows a clock skew within ",(0,r.kt)("inlineCode",{parentName:"p"},"5s")," across machines.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"If component ports are inaccessible: Use the loopback address to check if the component has started correctly. If the loopback address is accessible, then check if firewall rules are blocking access.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"If cluster machines are ",(0,r.kt)("strong",{parentName:"p"},"not within the internal network"),", you need to set ",(0,r.kt)("inlineCode",{parentName:"p"},"autoSetPorts")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," and modify the ",(0,r.kt)("inlineCode",{parentName:"p"},"registerIP")," of each ",(0,r.kt)("inlineCode",{parentName:"p"},"rpc")," component to the accessible IP address of the server where ",(0,r.kt)("inlineCode",{parentName:"p"},"etcd")," is deployed, ",(0,r.kt)("strong",{parentName:"p"},"and ensure that all ports are accessible"),". If you need to enable ",(0,r.kt)("inlineCode",{parentName:"p"},"prometheus"),", you also need to ensure that the ",(0,r.kt)("inlineCode",{parentName:"p"},"prometheus.port")," of each component is accessible.\nComponents with ",(0,r.kt)("inlineCode",{parentName:"p"},"autoSetPorts")," configuration are as follows:"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"openim-api.yml:prometheus.autoSetPorts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"openim-msggateway.yml:rpc.autoSetPorts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"openim-msgtransfer.yml:prometheus.autoSetPorts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"openim-push.yml:rpc.autoSetPorts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"openim-rpc-auth.yml:rpc.autoSetPorts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"openim-rpc-conversation.yml:rpc.autoSetPorts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"openim-rpc-friend.yml:rpc.autoSetPorts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"openim-rpc-group.yml:rpc.autoSetPorts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"openim-rpc-msg.yml:rpc.autoSetPorts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"openim-rpc-third.yml:rpc.autoSetPorts")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"openim-rpc-user.yml:rpc.autoSetPorts"))),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"rpc0",src:n(51190).Z,width:"1393",height:"369"})),(0,r.kt)("p",{parentName:"li"},"Additionally, on Machine A, you need to modify ",(0,r.kt)("inlineCode",{parentName:"p"},"prometheus.yml")," by removing all ",(0,r.kt)("inlineCode",{parentName:"p"},"http_sd_configs")," configuration items and their sub-items, adding ",(0,r.kt)("inlineCode",{parentName:"p"},"static_configs")," configuration items, and changing the ",(0,r.kt)("inlineCode",{parentName:"p"},"targets")," to the corresponding service ports.\nFor example: ",(0,r.kt)("inlineCode",{parentName:"p"},"openimserver-openim-api")," represents the ",(0,r.kt)("inlineCode",{parentName:"p"},"api")," component's ",(0,r.kt)("inlineCode",{parentName:"p"},"prometheus")," data scraping, so the port address in its ",(0,r.kt)("inlineCode",{parentName:"p"},"target")," should be consistent with the ",(0,r.kt)("inlineCode",{parentName:"p"},"prometheus.ports")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"openim-api.yml"),"."),(0,r.kt)("p",{parentName:"li"},(0,r.kt)("img",{alt:"prometheus0",src:n(89205).Z,width:"960",height:"757"})))))}k.isMDXComponent=!0},89205:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/prometheus0-c9f806d4aadf70d6e399bc5e2e2be447.png"},51190:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/rpc0-8c5909ddb8b5a525d7610a657865b05c.png"}}]);