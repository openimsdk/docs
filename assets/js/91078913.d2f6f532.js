"use strict";(self.webpackChunkopenim_docs=self.webpackChunkopenim_docs||[]).push([[3061],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(t),m=o,g=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return t?r.createElement(g,a(a({ref:n},p),{},{components:t})):r.createElement(g,a({ref:n},p))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=m;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[u]="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},75175:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>g,frontMatter:()=>s,metadata:()=>l,toc:()=>u});t(67294);var r=t(3905);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function a(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}const s={title:"Mini Program",hide_title:!0,sidebar_position:7},c=void 0,l={unversionedId:"quickstart/miniProgram",id:"quickstart/miniProgram",title:"Mini Program",description:"Integration steps",source:"@site/i18n/en/docusaurus-plugin-content-docs-sdks/current/quickstart/miniProgram.mdx",sourceDirName:"quickstart",slug:"/quickstart/miniProgram",permalink:"/sdks/quickstart/miniProgram",draft:!1,editUrl:"https://github.com/OpenIMSDK/docs/tree/main/docs/sdks/quickstart/miniProgram.mdx",tags:[],version:"current",lastUpdatedAt:1746609795,formattedLastUpdatedAt:"May 7, 2025",sidebarPosition:7,frontMatter:{title:"Mini Program",hide_title:!0,sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"uni-app",permalink:"/sdks/quickstart/uniapp"},next:{title:"SDKs for Various Platforms",permalink:"/sdks/api/"}},p={},u=[{value:"Integration steps",id:"integration-steps",level:2},{value:"1. Add Dependency",id:"1-add-dependency",level:3},{value:"2. Import SDK",id:"2-import-sdk",level:3},{value:"3. Login",id:"3-login",level:3},{value:"4. Sending and receiving messages",id:"4-sending-and-receiving-messages",level:3}],d={toc:u},m="wrapper";function g(e){var{components:n}=e,t=a(e,["components"]);return(0,r.kt)(m,i(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){o(e,n,t[n])}))}return e}({},d,t),{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"integration-steps"},"Integration steps"),(0,r.kt)("h3",{id:"1-add-dependency"},"1. Add Dependency"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @openim/client-sdk --save\n")),(0,r.kt)("h3",{id:"2-import-sdk"},"2. Import SDK"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { getSDK } from '@openim/client-sdk';\n\nconst IMSDK = getSDK();\n")),(0,r.kt)("h3",{id:"3-login"},"3. Login"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { getSDK, CbEvents, CallbackEvent } from '@openim/client-sdk';\n\nconst IMSDK = getSDK();\n\nIMSDK.on(CbEvents.OnConnecting, handleConnecting);\nIMSDK.on(CbEvents.OnConnectFailed, handleConnectFailed);\nIMSDK.on(CbEvents.OnConnectSuccess, handleConnectSuccess);\n\nIMSDK.login({\n  userID: 'IM user ID',\n  token: 'IM user token',\n  platformID: 5,\n  wsAddr: 'ws://your-server-ip:10001',\n  apiAddr: 'http://your-server-ip:10002',\n});\n\nfunction handleConnecting() {\n  // Connecting...\n}\n\nfunction handleConnectFailed({ errCode, errMsg }: CallbackEvent) {\n  // Connection failed \u274c\n  console.log(errCode, errMsg);\n}\n\nfunction handleConnectSuccess() {\n  // Connection successful \u2705\n}\n")),(0,r.kt)("h3",{id:"4-sending-and-receiving-messages"},"4. Sending and receiving messages"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"import { CbEvents, CallbackEvent, MessageItem } from '@openim/client-sdk';\n\n// Listenfor new messages \ud83d\udce9\nIMSDK.on(CbEvents.OnRecvNewMessages, handleNewMessages);\n\nconst message = (await IMSDK.createTextMessage('hello openim')).data;\n\nIMSDK.sendMessage({\n  recvID: 'recipient user ID',\n  groupID: '',\n  message,\n})\n  .then(() => {\n    // Message sent successfully \u2709\ufe0f\n  })\n  .catch(err => {\n    // Failed to send message \u274c\n    console.log(err);\n  });\n\nfunction handleNewMessages({ data }: CallbackEvent<MessageItem[]>) {\n  // New message list \ud83d\udce8\n  console.log(data);\n}\n")))}g.isMDXComponent=!0}}]);